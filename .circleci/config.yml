version: 2

jobs:
  checkout_code:
    working_directory: /home/circleci/object-utils

    docker:
      - image: circleci/node:10.18

    steps:
      - checkout

      - save_cache:
          key   : repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths :
            - ./

  node_dependencies:
    working_directory: /home/circleci/object-utils

    docker:
      - image: circleci/node:10.18

    steps:
      - restore_cache:
          key: repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}

      - restore_cache:
          key: node-cache-{{ .Branch }}-{{ checksum "package.json" }}

      - run:
          name    : Installing npm dependencies
          command : npm install

      - save_cache:
          key   : node-cache-{{ .Branch }}-{{ checksum "package.json" }}
          paths :
            - ./node_modules

  tests:
    working_directory: /home/circleci/object-utils

    docker:
      - image: circleci/node:10.18

    steps:

      - restore_cache:
          key: repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}

      - restore_cache:
          key: node-cache-{{ .Branch }}-{{ checksum "package.json" }}

      - run:
          name:  Download cc-test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name    : Running unit tests
          command : npm run test

      - store_artifacts:
          path    : test-results.xml
          prefix  : tests

      - store_artifacts:
          path    : coverage
          prefix  : coverage

      - store_test_results:
          path: test-results.xml

      - save_cache:
          key   : test-coverage-cache-{{ .Environment.CIRCLE_SHA1 }}
          paths : ./coverage

  docs_upload:
    working_directory: /home/circleci/object-utils

    docker:
      - image: circleci/node:10.18

    steps:
      - restore_cache:
          key: repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}

      - restore_cache:
          key: test-coverage-cache-{{ .Environment.CIRCLE_SHA1 }}

      - run:
          name:  Downloading cc-test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./coverage/cc-test-reporter
            chmod +x ./coverage/cc-test-reporter

      - run:
          name    : Uploading test coverage
          command : |
            ./coverage/cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.coverage.json coverage/lcov.info
            ./coverage/cc-test-reporter upload-coverage -i coverage/codeclimate.coverage.json

  npm_version:
      working_directory: /home/circleci/object-utils

      docker:
        - image: circleci/node:10.18

      steps:
        - restore_cache:
            key: repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}

        - restore_cache:
            key: node-cache-{{ .Branch }}-{{ checksum "package.json" }}

        - run:
            name    : Updating version
            command : npm run update-version

  npm_release:
      working_directory: /home/circleci/object-utils

      docker:
        - image: circleci/node:10.18

      steps:
        - restore_cache:
            key: repo-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}

        - restore_cache:
            key: node-cache-{{ .Branch }}-{{ checksum "package.json" }}

        - run:
            name    : Authenticating with registry
            command : |
              echo "registry=https://npm.pkg.github.com/contartec-team" > .npmrc
              echo "//npm.pkg.github.com/:_authToken=$GH_TOKEN" >> .npmrc

        - run:
            name    : Releasing and publishing version
            command : npm run release-version

workflows:
  version: 2

  build-and-deploy:
    jobs:
      - checkout_code

      - node_dependencies:
          requires:
            - checkout_code

      - tests:
          requires:
            - node_dependencies

      - approval:
          filters:
            branches:
              ignore: master
          type: approval
          requires:
            - tests

      - npm_version:
          requires:
            - approval

      - npm_release:
          filters:
            branches:
              only: master
          requires:
            - tests

      - docs_upload:
          requires:
            - npm_release